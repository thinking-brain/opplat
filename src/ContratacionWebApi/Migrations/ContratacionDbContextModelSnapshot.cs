// <auto-generated />
using System;
using ContratacionWebApi.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace ContratacionWebApi.Migrations
{
    [DbContext(typeof(ContratacionDbContext))]
    partial class ContratacionDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("ContratacionWebApi.Models.AdminContrato", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("AdminContratoId");

                    b.Property<int>("DepartamentoId");

                    b.HasKey("Id");

                    b.HasIndex("DepartamentoId");

                    b.ToTable("AdminContratos");
                });

            modelBuilder.Entity("ContratacionWebApi.Models.ComiteContratacion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Activo");

                    b.Property<int>("TrabComiteContratacionId");

                    b.HasKey("Id");

                    b.ToTable("ComiteContratacion");
                });

            modelBuilder.Entity("ContratacionWebApi.Models.Contrato", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("AdminContratoId");

                    b.Property<bool>("Cliente");

                    b.Property<int?>("ContratoId");

                    b.Property<int>("EntidadId");

                    b.Property<int>("EstadoComitContratacion");

                    b.Property<int>("EstadoContrato");

                    b.Property<int>("EstadoEconomico");

                    b.Property<int>("EstadoJuridico");

                    b.Property<DateTime>("FechaDeFirmado");

                    b.Property<DateTime>("FechaDeRecepcion");

                    b.Property<DateTime>("FechaDeVenOferta");

                    b.Property<DateTime>("FechaVenContrato");

                    b.Property<string>("FilePath");

                    b.Property<string>("MotivoSuplemento");

                    b.Property<string>("Nombre");

                    b.Property<string>("Numero");

                    b.Property<string>("ObjetoDeContrato");

                    b.Property<int>("TerminoDePago");

                    b.Property<int>("Tipo");

                    b.HasKey("Id");

                    b.HasIndex("ContratoId");

                    b.HasIndex("EntidadId");

                    b.ToTable("Contratos");
                });

            modelBuilder.Entity("ContratacionWebApi.Models.ContratoId_DepartamentoId", b =>
                {
                    b.Property<int>("ContratoId");

                    b.Property<int>("DepartamentoId");

                    b.HasKey("ContratoId", "DepartamentoId");

                    b.HasIndex("DepartamentoId");

                    b.ToTable("ContratoId_DepartamentoId");
                });

            modelBuilder.Entity("ContratacionWebApi.Models.ContratoId_FormaPagoId", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("ContratoId");

                    b.Property<int>("FormaDePago");

                    b.Property<int>("FormaDePagoId");

                    b.HasKey("Id");

                    b.HasIndex("ContratoId");

                    b.ToTable("ContratoId_FormaPagoId");
                });

            modelBuilder.Entity("ContratacionWebApi.Models.CuentaBancaria", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("EntidadId");

                    b.Property<int>("Moneda");

                    b.Property<int>("NombreSucursal");

                    b.Property<string>("NumeroCuenta");

                    b.Property<string>("NumeroSucursal");

                    b.HasKey("Id");

                    b.HasIndex("EntidadId");

                    b.ToTable("CuentasBancarias");
                });

            modelBuilder.Entity("ContratacionWebApi.Models.Departamento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Nombre");

                    b.HasKey("Id");

                    b.ToTable("Departamentos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nombre = "ECONÓMICO"
                        },
                        new
                        {
                            Id = 2,
                            Nombre = "JURÍDICO"
                        });
                });

            modelBuilder.Entity("ContratacionWebApi.Models.Dictamen", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Consideraciones");

                    b.Property<int>("ContratoId");

                    b.Property<int?>("EspecialistaId");

                    b.Property<DateTime>("FechaDictamen");

                    b.Property<string>("FilePath");

                    b.Property<string>("FundamentosDeDerecho");

                    b.Property<string>("Observaciones");

                    b.Property<string>("OtrosSi");

                    b.Property<string>("Recomendaciones");

                    b.Property<string>("Username");

                    b.HasKey("Id");

                    b.HasIndex("ContratoId");

                    b.HasIndex("EspecialistaId");

                    b.ToTable("Dictamenes");
                });

            modelBuilder.Entity("ContratacionWebApi.Models.DictaminadorContrato", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("DepartamentoId");

                    b.Property<int>("DictaminadorId");

                    b.HasKey("Id");

                    b.HasIndex("DepartamentoId");

                    b.ToTable("DictaminadoresContratos");
                });

            modelBuilder.Entity("ContratacionWebApi.Models.Documento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("AdminContratoId");

                    b.Property<string>("Dictamen");

                    b.Property<string>("Discriminator")
                        .IsRequired();

                    b.Property<DateTime?>("FechaFirmado");

                    b.Property<DateTime?>("FechaVenContrato");

                    b.Property<decimal?>("MontoCuc");

                    b.Property<decimal?>("MontoCup");

                    b.Property<string>("NoOficial");

                    b.Property<string>("Numero");

                    b.Property<string>("RevisionActual");

                    b.HasKey("Id");

                    b.HasIndex("AdminContratoId");

                    b.ToTable("Documentos");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Documento");
                });

            modelBuilder.Entity("ContratacionWebApi.Models.Entidad", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CI");

                    b.Property<string>("CarnetTCP");

                    b.Property<string>("Codigo");

                    b.Property<string>("Correo");

                    b.Property<string>("Direccion")
                        .IsRequired();

                    b.Property<string>("Fax");

                    b.Property<string>("Nit")
                        .IsRequired();

                    b.Property<string>("Nombre")
                        .IsRequired();

                    b.Property<string>("ObjetoSocial");

                    b.Property<int>("Sector");

                    b.Property<string>("Siglas");

                    b.HasKey("Id");

                    b.ToTable("Entidades");
                });

            modelBuilder.Entity("ContratacionWebApi.Models.EspExternoId_ContratoId", b =>
                {
                    b.Property<int>("ContratoId");

                    b.Property<int>("EspecialistaExternoId");

                    b.HasKey("ContratoId", "EspecialistaExternoId");

                    b.HasIndex("EspecialistaExternoId");

                    b.ToTable("EspecialistaExternoId_ContratoId");
                });

            modelBuilder.Entity("ContratacionWebApi.Models.Especialidad", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("DocumentoId");

                    b.Property<string>("Nombre")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("DocumentoId");

                    b.ToTable("cont_especialidades");
                });

            modelBuilder.Entity("ContratacionWebApi.Models.Especialista", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Activo");

                    b.Property<string>("DetallesEspecialista");

                    b.Property<int>("EspecialidadId");

                    b.Property<int>("TrabajadorId");

                    b.HasKey("Id");

                    b.HasIndex("EspecialidadId");

                    b.ToTable("Especialista");
                });

            modelBuilder.Entity("ContratacionWebApi.Models.EspecialistaExterno", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Apellidos");

                    b.Property<string>("Area");

                    b.Property<string>("Cargo");

                    b.Property<string>("Departamento");

                    b.Property<int>("EntidadId");

                    b.Property<string>("Nombre");

                    b.HasKey("Id");

                    b.HasIndex("EntidadId");

                    b.ToTable("EspecialistasExternos");
                });

            modelBuilder.Entity("ContratacionWebApi.Models.HistoricoDeDocumento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("ContratoId");

                    b.Property<string>("Detalles");

                    b.Property<int?>("DocumentoId");

                    b.Property<DateTime>("Fecha");

                    b.Property<string>("Username")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("ContratoId");

                    b.HasIndex("DocumentoId");

                    b.ToTable("HistoricosDeDocumentos");
                });

            modelBuilder.Entity("ContratacionWebApi.Models.HistoricoEstadoContrato", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("ContratoId");

                    b.Property<int>("EstadoOrden");

                    b.Property<DateTime>("Fecha");

                    b.Property<string>("Usuario");

                    b.HasKey("Id");

                    b.HasIndex("ContratoId");

                    b.ToTable("HistoricosEstadoContratos");
                });

            modelBuilder.Entity("ContratacionWebApi.Models.Monto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<decimal>("Cantidad");

                    b.Property<int>("ContratoId");

                    b.Property<int>("Moneda");

                    b.HasKey("Id");

                    b.HasIndex("ContratoId");

                    b.ToTable("montos");
                });

            modelBuilder.Entity("ContratacionWebApi.Models.ObjetoDeContrato", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("DocumentoId");

                    b.Property<string>("Nombre")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("DocumentoId");

                    b.ToTable("cont_objs_de_contratos");
                });

            modelBuilder.Entity("ContratacionWebApi.Models.Telefono", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("EntidadId");

                    b.Property<string>("Extension");

                    b.Property<string>("Numero");

                    b.HasKey("Id");

                    b.HasIndex("EntidadId");

                    b.ToTable("Telefonos");
                });

            modelBuilder.Entity("TiempoVenContrato", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("ContratoTiempo");

                    b.Property<int>("ContratosCasiVencDesde");

                    b.Property<int>("ContratosCasiVencHasta");

                    b.Property<int>("ContratosProxVencerDesde");

                    b.Property<int>("ContratosProxVencerHasta");

                    b.Property<int>("ContratosVencidos");

                    b.HasKey("Id");

                    b.ToTable("TiempoVenContratos");
                });

            modelBuilder.Entity("TiempoVenOferta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("OfertaTiempo");

                    b.Property<int>("OfertasCasiVencDesde");

                    b.Property<int>("OfertasCasiVencHasta");

                    b.Property<int>("OfertasProxVencDesde");

                    b.Property<int>("OfertasProxVencHasta");

                    b.Property<int>("OfertasVencidas");

                    b.HasKey("Id");

                    b.ToTable("TiempoVenOfertas");
                });

            modelBuilder.Entity("ContratacionWebApi.Models.Suplemento", b =>
                {
                    b.HasBaseType("ContratacionWebApi.Models.Documento");

                    b.Property<int>("ContratoId");

                    b.HasIndex("ContratoId");

                    b.HasDiscriminator().HasValue("Suplemento");
                });

            modelBuilder.Entity("ContratacionWebApi.Models.AdminContrato", b =>
                {
                    b.HasOne("ContratacionWebApi.Models.Departamento", "Departamento")
                        .WithMany()
                        .HasForeignKey("DepartamentoId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ContratacionWebApi.Models.Contrato", b =>
                {
                    b.HasOne("ContratacionWebApi.Models.Contrato")
                        .WithMany("Contratos")
                        .HasForeignKey("ContratoId");

                    b.HasOne("ContratacionWebApi.Models.Entidad", "Entidad")
                        .WithMany()
                        .HasForeignKey("EntidadId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ContratacionWebApi.Models.ContratoId_DepartamentoId", b =>
                {
                    b.HasOne("ContratacionWebApi.Models.Contrato", "Contrato")
                        .WithMany()
                        .HasForeignKey("ContratoId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ContratacionWebApi.Models.Departamento", "Departamento")
                        .WithMany()
                        .HasForeignKey("DepartamentoId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ContratacionWebApi.Models.ContratoId_FormaPagoId", b =>
                {
                    b.HasOne("ContratacionWebApi.Models.Contrato", "Contrato")
                        .WithMany()
                        .HasForeignKey("ContratoId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ContratacionWebApi.Models.CuentaBancaria", b =>
                {
                    b.HasOne("ContratacionWebApi.Models.Entidad", "Entidad")
                        .WithMany("CuentasBancarias")
                        .HasForeignKey("EntidadId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ContratacionWebApi.Models.Dictamen", b =>
                {
                    b.HasOne("ContratacionWebApi.Models.Contrato", "Contrato")
                        .WithMany("Dictamenes")
                        .HasForeignKey("ContratoId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ContratacionWebApi.Models.Especialista")
                        .WithMany("Dictamenes")
                        .HasForeignKey("EspecialistaId");
                });

            modelBuilder.Entity("ContratacionWebApi.Models.DictaminadorContrato", b =>
                {
                    b.HasOne("ContratacionWebApi.Models.Departamento", "Departamento")
                        .WithMany()
                        .HasForeignKey("DepartamentoId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ContratacionWebApi.Models.Documento", b =>
                {
                    b.HasOne("ContratacionWebApi.Models.AdminContrato", "AdminContrato")
                        .WithMany()
                        .HasForeignKey("AdminContratoId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ContratacionWebApi.Models.EspExternoId_ContratoId", b =>
                {
                    b.HasOne("ContratacionWebApi.Models.Contrato", "Contrato")
                        .WithMany()
                        .HasForeignKey("ContratoId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ContratacionWebApi.Models.EspecialistaExterno", "EspecialistaExterno")
                        .WithMany("EspExternoId_ContratoId")
                        .HasForeignKey("EspecialistaExternoId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ContratacionWebApi.Models.Especialidad", b =>
                {
                    b.HasOne("ContratacionWebApi.Models.Documento")
                        .WithMany("Especialidades")
                        .HasForeignKey("DocumentoId");
                });

            modelBuilder.Entity("ContratacionWebApi.Models.Especialista", b =>
                {
                    b.HasOne("ContratacionWebApi.Models.Especialidad", "Especialidad")
                        .WithMany("Especialistas")
                        .HasForeignKey("EspecialidadId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ContratacionWebApi.Models.EspecialistaExterno", b =>
                {
                    b.HasOne("ContratacionWebApi.Models.Entidad", "Entidad")
                        .WithMany()
                        .HasForeignKey("EntidadId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ContratacionWebApi.Models.HistoricoDeDocumento", b =>
                {
                    b.HasOne("ContratacionWebApi.Models.Contrato", "Contrato")
                        .WithMany()
                        .HasForeignKey("ContratoId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ContratacionWebApi.Models.Documento")
                        .WithMany("Historicos")
                        .HasForeignKey("DocumentoId");
                });

            modelBuilder.Entity("ContratacionWebApi.Models.HistoricoEstadoContrato", b =>
                {
                    b.HasOne("ContratacionWebApi.Models.Contrato", "Contrato")
                        .WithMany()
                        .HasForeignKey("ContratoId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ContratacionWebApi.Models.Monto", b =>
                {
                    b.HasOne("ContratacionWebApi.Models.Contrato", "Contrato")
                        .WithMany("Montos")
                        .HasForeignKey("ContratoId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ContratacionWebApi.Models.ObjetoDeContrato", b =>
                {
                    b.HasOne("ContratacionWebApi.Models.Documento")
                        .WithMany("ObjetosDeContrato")
                        .HasForeignKey("DocumentoId");
                });

            modelBuilder.Entity("ContratacionWebApi.Models.Telefono", b =>
                {
                    b.HasOne("ContratacionWebApi.Models.Entidad", "Entidad")
                        .WithMany("Telefonos")
                        .HasForeignKey("EntidadId");
                });

            modelBuilder.Entity("ContratacionWebApi.Models.Suplemento", b =>
                {
                    b.HasOne("ContratacionWebApi.Models.Contrato", "Contrato")
                        .WithMany("Suplementos")
                        .HasForeignKey("ContratoId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
