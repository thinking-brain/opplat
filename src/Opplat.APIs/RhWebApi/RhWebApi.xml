<?xml version="1.0"?>
<doc>
    <assembly>
        <name>RhWebApi</name>
    </assembly>
    <members>
        <member name="M:RhWebApi.Controllers.AreasController.GetArea">
            <summary>
            Devuelve un listado con todas las areas
            </summary>
            <returns></returns>
        </member>
        <member name="M:RhWebApi.Controllers.AreasController.GetArea(System.Int32)">
            <summary>
            Devuelve un area segun ID
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:RhWebApi.Controllers.AreasController.PutArea(System.Int32,RhWebApi.Models.Area)">
            <summary>
            Editar Area
            </summary>
            <param name="id"></param>
            <param name="area"></param>
            <returns></returns>
        </member>
        <member name="M:RhWebApi.Controllers.AreasController.PostArea(RhWebApi.Models.Area)">
            <summary>
            Crear Area
            </summary>
            <param name="area"></param>
            <returns></returns>
        </member>
        <member name="M:RhWebApi.Controllers.AreasController.DeleteArea(System.Int32)">
            <summary>
            Eliminar Area
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:RhWebApi.Controllers.AreasController.AreaExists(System.Int32)">
            <summary>
            Comprobar si existe el Area
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:RhWebApi.Controllers.ConCuentasController.GetConCuenta">
            <summary>
            Devuelve un Listado de Cuentas de Contabilidad
            </summary>
            <returns></returns>
        </member>
        <member name="M:RhWebApi.Controllers.ConCuentasController.GetConCuenta(System.Int32)">
            <summary>
            Devuelve una Cuenta segun su ID
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:RhWebApi.Controllers.ConCuentasController.ConCuentaExists(System.Int32)">
            <summary>
            Chequea que Exista la cuenta
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:RhWebApi.Controllers.CosCentrosController.GetCosCentro">
            <summary>
            Devuelve un Listado de Centros de Costos
            </summary>
            <returns></returns>
        </member>
        <member name="M:RhWebApi.Controllers.CosCentrosController.GetCosCentro(System.Int32)">
            <summary>
            Devuelve un Centro de Costo segun su ID
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:RhWebApi.Controllers.CosCentrosController.CosCentroExists(System.Int32)">
            <summary>
            Chequea que Exista el Centro de Costo
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:RhWebApi.Controllers.CosElementogastosController.GetCosElementogasto">
            <summary>
            Devuelve un Listado de Elmentos de Gastos
            </summary>
            <returns></returns>
        </member>
        <member name="M:RhWebApi.Controllers.CosElementogastosController.GetCosElementogasto(System.Int32)">
            <summary>
            Devuelve un Elemento de Gasto segun su ID
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:RhWebApi.Controllers.CosElementogastosController.CosElementogastoExists(System.Int32)">
            <summary>
            Chequea que Exista el Elemento de Gasto
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:RhWebApi.Controllers.CosSubelementogastosController.GetCosSubelementogasto">
            <summary>
            Devuelve un Listado de SubElementos de Gasto
            </summary>
            <returns></returns>
        </member>
        <member name="M:RhWebApi.Controllers.CosSubelementogastosController.GetCosSubelementogasto(System.Int32)">
            <summary>
            Devuelve un SubElemento de Gasto Segun su ID
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:RhWebApi.Controllers.CosSubelementogastosController.CosSubelementogastoExists(System.Int32)">
            <summary>
            Chequea que Exista el SubElemento de Gasto
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:RhWebApi.Controllers.CostosController.getYears">
            <summary>
            Devuelve Lista de Años
            </summary>
            <returns></returns>
        </member>
        <member name="M:RhWebApi.Controllers.CostosController.SelectAreas">
            <summary>
            Selector de Areas para Vistas
            </summary>
            <returns></returns>
        </member>
        <member name="M:RhWebApi.Controllers.CostosController.SelectMeses">
            <summary>
            Selector de Meses para Vistas
            </summary>
            <returns></returns>
        </member>
        <member name="M:RhWebApi.Controllers.CostosController.SelectAños">
            <summary>
            Selector de Años para Vistas
            </summary>
            <returns></returns>
        </member>
        <member name="M:RhWebApi.Controllers.CostosController.SelectCuentas">
            <summary>
            Selector de Cuentas para Vistas
            </summary>
            <returns></returns>
        </member>
        <member name="M:RhWebApi.Controllers.CostosController.CostoGroup(System.String,System.Int32,System.Int32,System.String)">
            <summary>
            Costos Agrupados por Grupos
            </summary>
            <param name="años"></param>
            <param name="meses"></param>
            <param name="areas"></param>
            <param name="cuenta"></param>
            <returns></returns>
        </member>
        <member name="M:RhWebApi.Controllers.CostosController.CostoGroupAdvanced(System.String,System.Int32,System.Int32,System.String)">
            <summary>
            Costos Agrupados por Grupo Modo Avanzado
            </summary>
            <param name="años"></param>
            <param name="meses"></param>
            <param name="areas"></param>
            <param name="cuenta"></param>
            <returns></returns>
        </member>
        <member name="M:RhWebApi.Controllers.CostosController.CostColumnReport(System.String,System.Int32,System.Int32,System.String)">
            <summary>
            Reporte de Costo por Columnas
            </summary>
            <param name="años"></param>
            <param name="meses"></param>
            <param name="areas"></param>
            <param name="cuenta"></param>
            <returns></returns>
        </member>
        <member name="M:RhWebApi.Controllers.CostosController.Costo(System.String,System.String,System.Int32,System.Int32)">
            <summary>
            Costos Todos
            </summary>
            <param name="cuenta"></param>
            <param name="años"></param>
            <param name="areas"></param>
            <param name="meses"></param>
            <returns></returns>
        </member>
        <member name="M:RhWebApi.Controllers.GastosIndirectosController.GastosIndirectos(System.String,System.Int32)">
            <summary>
            Reporte de Gastos Indirectos
            </summary>
            <param name="años"></param>
            <param name="mes"></param>
            <returns></returns>
        </member>
        <member name="M:RhWebApi.Controllers.GrupoSubelementosController.GetGrupoSubelemento">
            <summary>
            Devuelve un Listado de Grupo de SubElementos
            </summary>
            <returns></returns>
        </member>
        <member name="M:RhWebApi.Controllers.GrupoSubelementosController.GetGrupoSubelemento(System.Int32)">
            <summary>
            Devuelve un Grupo de SubElementos segun su ID
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:RhWebApi.Controllers.GrupoSubelementosController.PutGrupoSubelemento(System.Int32,RhWebApi.Models.GrupoSubelemento)">
            <summary>
            Editar un Grupo de SubElementos
            </summary>
            <param name="id"></param>
            <param name="grupoSubelemento"></param>
            <returns></returns>
        </member>
        <member name="M:RhWebApi.Controllers.GrupoSubelementosController.PostGrupoSubelemento(RhWebApi.Models.GrupoSubelemento)">
            <summary>
            Crear un Grupo de SubElementos
            </summary>
            <param name="grupoSubelemento"></param>
            <returns></returns>
        </member>
        <member name="M:RhWebApi.Controllers.GrupoSubelementosController.DeleteGrupoSubelemento(System.Int32)">
            <summary>
            Eliminar un Grupo de SubElementos
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:RhWebApi.Controllers.PlanesController.UploadPlan(Microsoft.AspNetCore.Http.IFormFile)">
            <summary>
            Subir Plan de Gastos desglozado por SubElementos
            </summary>
            <param name="File"></param>
            <returns></returns>
        </member>
        <member name="M:RhWebApi.Controllers.PlanesController.GetPlan">
            <summary>
            Devuelve un Listado de Planes
            </summary>
            <returns></returns>
        </member>
        <member name="M:RhWebApi.Controllers.PlanesController.PlanExists(System.Int32)">
            <summary>
            Chequea que Exista un Plan
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:RhWebApi.Controllers.PlanIGController.UploadPlanGI(Microsoft.AspNetCore.Http.IFormFile)">
            <summary>
            Subir Plan de Gastos e Ingresos del Año
            </summary>
            <param name="File"></param>
            <returns></returns>
        </member>
        <member name="M:RhWebApi.Controllers.PlanIGController.PlanIGDatos">
            <summary>
            Devuelve los datos necesarios para crear un Plan IG
            </summary>
            <returns></returns>
        </member>
        <member name="M:RhWebApi.Controllers.PlanIGController.PlanIGCreate(System.Collections.Generic.List{RhWebApi.Models.PlanGI})">
            <summary>
            /Crear Planes GI
            </summary>
            <param name="planes"></param>
            <returns></returns>
        </member>
        <member name="M:RhWebApi.Controllers.PlanIGController.Ingresos(System.String,System.Int32)">
            <summary>
            Devuelve los Ingresos para el plan de Gastos en Ingresos
            </summary>
            <param name="años"></param>
            <param name="meses"></param>
            <returns></returns>
        </member>
        <member name="M:RhWebApi.Controllers.PlanIGController.Egresos(System.String,System.Int32)">
            <summary>
            Devuelve los Egresos para el plan de Gastos en Ingresos
            </summary>
            <param name="años"></param>
            <param name="meses"></param>
            <returns></returns>
        </member>
        <member name="M:RhWebApi.Controllers.PlanIGController.Utilidades(System.String,System.Int32)">
            <summary>
            Devuelve las Utilidades para el plan de Gastos en Ingresos
            </summary>
            <param name="años"></param>
            <param name="meses"></param>
            <returns></returns>
        </member>
        <member name="M:RhWebApi.Controllers.PronosticoProductivoController.PlanesPPPost(System.Collections.Generic.List{RhWebApi.Models.PlanPronosticoProductivo})">
            <summary>
            Crear Plan
            </summary>
            <param name="planes"></param>
            <returns></returns>
        </member>
        <member name="M:RhWebApi.Controllers.PronosticoProductivoController.PP(System.String,System.Int32)">
            <summary>
            Devuelve Pronosticos Productivos
            </summary>
            <param name="años"></param>
            <param name="meses"></param>
            <returns></returns>
        </member>
        <member name="M:RhWebApi.Controllers.SubmayorController.Update2">
            <summary>
            Actualizar SubMayor desde la Base de Datos ED
            </summary>
            <returns></returns>
        </member>
        <member name="M:RhWebApi.Controllers.SubmayorController.Update">
            <summary>
            Actualizar SubMayor desde la Base de Datos VERSAT_2017
            </summary>
            <returns></returns>
        </member>
        <member name="M:RhWebApi.Controllers.UpdatesController.UpdateArea">
            <summary>
            Actualizar Areas
            </summary>
            <returns></returns>
        </member>
        <member name="M:RhWebApi.Controllers.UpdatesController.UpdateACentro">
            <summary>
            Actualizar Grupos de SubElementos
            </summary>
            <returns></returns>
        </member>
        <member name="M:RhWebApi.Controllers.UpdatesController.UpdateGSS">
            <summary>
            Actualizar Grupos de SubElementos + SubElementos
            </summary>
            <returns></returns>
        </member>
        <member name="M:RhWebApi.Controllers.UpdatesController.UpdateSubmayorDeCuentas">
            <summary>
            Actualizar SubMayorCuentas
            </summary>
            <returns></returns>
        </member>
        <member name="M:RhWebApi.Controllers.UpdatesController.UpdateCPP">
            <summary>
            Actualizar Conceptos Plan Pronostico Productivo
            </summary>
            <returns></returns>
        </member>
        <member name="M:RhWebApi.Helper.CostReportHelper.GetMonths">
            <summary>
            Devuelve una lista de Meses
            </summary>
            <returns></returns>
        </member>
        <member name="M:RhWebApi.Helper.CostReportHelper.GetAMonth(System.Int32)">
            <summary>
            Devuelve el mes asociado a un valor entero entre 1 y 12.
            </summary>
            <param name="month">Valor asociado al mes.</param>
            <returns>Nombre del Mes o la cadena vacia en caso de que el valor no este asociado a ningun mes.</returns>
        </member>
        <member name="M:RhWebApi.Helper.CostReportHelper.PlanYearlyReport(RhWebApi.Models.Area,System.Int32,System.String)">
            <summary>
            Obtiene el reporte consolidado para el año
            </summary>
            <param name="area"></param>
            <param name="year"></param>
            <param name="cuenta"></param>
            <returns></returns>
        </member>
        <member name="M:RhWebApi.Helper.CostReportHelper.GetYearlyPlan(System.Int32,System.Collections.Generic.List{System.String},System.String)">
            <summary>
            Obtiene todos las planes anuales para una serie de centros de costos
            </summary>
            <param name="year">Año Deseado</param>
            <param name="centers">Lista de centro de costos</param>
            <param name="cuenta">Cuenta de pago</param>
            <returns></returns>
        </member>
        <member name="T:RhWebApi.Helper.PlanCsvHelper">
            <summary>
            Helper para importar el plan de costo en formato csv.
            </summary>
        </member>
        <member name="M:RhWebApi.Helper.PlanCsvHelper.readCsv(CsvHelper.CsvReader)">
            <summary>
            
            </summary>
            <param name="reader">Instancia del nuget CsvReader que contine el puntero al fichero csv.</param>
        </member>
        <member name="M:RhWebApi.Helper.PlanCsvHelper.SplitRecord(System.String)">
            <summary>
            Divide el registro obtendido.
            </summary>
            <param name="record">Linea obtenida por el puntero al fichero.</param>
            <returns>Arreglo de string</returns>
        </member>
        <member name="M:RhWebApi.Helper.PlanCsvHelper.ReadingCostCenter(CsvHelper.CsvReader,System.String@,System.String@,System.String@)">
            <summary>
            Obtiene el centrode costo y la id de centroCosto_Area
            </summary>
            <param name="reader">Puntero al fichero en csv.</param>
            <param name="centroCostid">Codigo del centro de costo</param>
            <param name="centroAreaid">Id del Area por centro de costo.</param>
        </member>
        <member name="M:RhWebApi.Helper.PlanCsvHelper.readValues(CsvHelper.CsvReader)">
            <summary>
            lee solmante los valores mensuales
            </summary>
            <param name="reader">Puntero al fichero en csv.</param>
            <returns></returns>
        </member>
        <member name="M:RhWebApi.Helper.PlanCsvHelper.readValues(System.String[])">
            <summary>
            Lee solamente los valores mensuales.
            </summary>
            <param name="record">registro de un subElemento.</param>
            <returns></returns>
        </member>
        <member name="M:RhWebApi.Helper.PlanCsvHelper.isEmpty(System.String[])">
            <summary>
            Determina si un registro solo posee valores vacios o nulos.
            </summary>
            <param name="record">Registro</param>
            <returns></returns>
        </member>
        <member name="M:RhWebApi.Helper.PlanCsvHelper.readingElements(CsvHelper.CsvReader,System.String,System.String,System.String)">
            <summary>
            Metodo principal que itera sobre los subelementos y va almacenado en la bd.
            </summary>
            <param name="reader"></param>
            <param name="costCenterId"></param>
            <param name="costcenterAreaId"></param>
        </member>
        <member name="M:RhWebApi.Helper.PlanCsvHelper.isAtomicElement(System.String,System.String@,System.String@,System.String@)">
            <summary>
            Determina si es un subElemento
            </summary>
            <param name="record">Regsitro</param>
            <param name="code">Codigo del subElemento.</param>
            <param name="coin">Codigo de la moneda</param>
            /// <param name="top">Tope maximo del rango si este existe (Ej: 220340-27).</param>
            <returns></returns>
        </member>
        <member name="M:RhWebApi.Helper.PlanCsvHelper.isEmtpyPlan(System.Collections.Generic.List{System.String})">
            <summary>
            Determina si no existe una cuenta para el subElemento.
            </summary>
            <param name="values">Valores Mensuales</param>
            <returns></returns>
        </member>
        <member name="M:RhWebApi.Helper.PlanCsvHelper.ReadElement(System.Int32,System.String,System.String,System.String,RhWebApi.Models.Plan)">
            <summary>
            Asigna a una instancia de plan los valores de subelemento,cuenta,centroCosto,moneda y descripci[on de la cuenta.
            </summary>
            <param name="code">Codigo del subElemento</param>
            <param name="centroCosto">Codigo del centro de costo</param>
            <param name="coin">Codigo del tipo de moneda</param>
            <param name="plan">Instancia del plan</param>
            <returns></returns>
        </member>
        <member name="M:RhWebApi.Helper.PlanCsvHelper.ReadMonthValues(System.Collections.Generic.List{System.String},RhWebApi.Models.Plan)">
            <summary>
            Mapea los valores mensuales de un registro al plan en cuestion.
            </summary>
            <param name="values">Valores mensuales</param>
            <param name="plan">Instancia del plan que se esta importando.</param>
        </member>
        <member name="M:RhWebApi.Helper.PlanCsvHelper.GetElementsAtRange(System.String,System.String)">
            <summary>
            Obtiene los codigos de los subelementos contenidos en un rango.
            </summary>
            <param name="code">Codigo del subelemento</param>
            <param name="top">Tope maximo del rango de subelementos</param>
            <returns>Un ienumerable que contine los codigos de los subelementos contenidos en el rango.</returns>
        </member>
        <member name="T:RhWebApi.Helper.PlanGICsvHelper">
            <summary>
            Helper para importar el plan de costo en formato csv.
            </summary>
        </member>
        <member name="M:RhWebApi.Helper.PlanGICsvHelper.readCsv(CsvHelper.CsvReader)">
            <summary>
            
            </summary>
            <param name="reader">Instancia del nuget CsvReader que contine el puntero al fichero csv.</param>
        </member>
        <member name="M:RhWebApi.Helper.PlanGICsvHelper.SplitRecord(System.String)">
            <summary>
            Divide el registro obtendido.
            </summary>
            <param name="record">Linea obtenida por el puntero al fichero.</param>
            <returns>Arreglo de string</returns>
        </member>
        <member name="M:RhWebApi.Helper.PlanGICsvHelper.ReadingYear(CsvHelper.CsvReader,System.String@)">
            <summary>
            Obtiene el año del plan
            </summary>
            <param name="año">Año del plan</param>
            <param name="reader">Puntero al fichero en csv.</param>
        </member>
        <member name="M:RhWebApi.Helper.PlanGICsvHelper.readValues(CsvHelper.CsvReader)">
            <summary>
            lee solmante los valores mensuales
            </summary>
            <param name="reader">Puntero al fichero en csv.</param>
            <returns></returns>
        </member>
        <member name="M:RhWebApi.Helper.PlanGICsvHelper.readValues(System.String[])">
            <summary>
            Lee solamente los valores mensuales.
            </summary>
            <param name="record">registro de un subElemento.</param>
            <returns></returns>
        </member>
        <member name="M:RhWebApi.Helper.PlanGICsvHelper.isEmpty(System.String[])">
            <summary>
            Determina si un registro solo posee valores vacios o nulos.
            </summary>
            <param name="record">Registro</param>
            <returns></returns>
        </member>
        <member name="M:RhWebApi.Helper.PlanGICsvHelper.readingElements(CsvHelper.CsvReader,System.String)">
            <summary>
            Metodo principal que itera sobre los elementos y va almacenado en la bd.
            </summary>
            <param name="reader"></param>
        </member>
        <member name="M:RhWebApi.Helper.PlanGICsvHelper.isAtomicElement(System.String,System.String@,System.String@)">
            <summary>
            Determina si es un subElemento
            </summary>
            <param name="record">Regsitro</param>
            <param name="code">Codigo del subElemento.</param>
            <param name="coin">Codigo de la moneda</param>
            /// <param name="top">Tope maximo del rango si este existe (Ej: 220340-27).</param>
            <returns></returns>
        </member>
        <member name="M:RhWebApi.Helper.PlanGICsvHelper.isEmtpyPlan(System.Collections.Generic.List{System.String})">
            <summary>
            Determina si no existe una cuenta para el subElemento.
            </summary>
            <param name="values">Valores Mensuales</param>
            <returns></returns>
        </member>
        <member name="M:RhWebApi.Helper.PlanGICsvHelper.ReadElement(System.String,RhWebApi.Models.PlanGI)">
            <summary>
            Asigna a una instancia de plan los valores del elemento.
            </summary>
            <param name="subcode">Elemento</param>
            <param name="plan">Instancia del plan</param>
            <returns></returns>
        </member>
        <member name="M:RhWebApi.Helper.PlanGICsvHelper.ReadMonthValues(System.Collections.Generic.List{System.String},RhWebApi.Models.PlanGI)">
            <summary>
            Mapea los valores mensuales de un registro al plan en cuestion.
            </summary>
            <param name="values">Valores mensuales</param>
            <param name="plan">Instancia del plan que se esta importando.</param>
        </member>
        <member name="M:RhWebApi.Helper.PlanGICsvHelper.FixImporte(System.String)">
            <summary>
            Arreglar Importes.
            </summary>
            <param name="money">Linea obtenida por el puntero al fichero.</param>
            <returns>Arreglo de string</returns>
        </member>
        <member name="M:RhWebApi.Helper.PlanGICsvHelper.GetElementsAtRange(System.String,System.String)">
            <summary>
            Obtiene los codigos de los subelementos contenidos en un rango.
            </summary>
            <param name="code">Elemento</param>
            <param name="top">Tope maximo del rango de subelementos</param>
            <returns>Un ienumerable que contine los codigos de los elementos contenidos en el rango.</returns>
        </member>
        <member name="T:RhWebApi.Helpers.FixText">
            <summary>
            Arreglar Nombres para URL
            </summary>
        </member>
    </members>
</doc>
