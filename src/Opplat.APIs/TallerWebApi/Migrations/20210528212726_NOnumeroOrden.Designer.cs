// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using TallerWebApi.Data;

namespace TallerWebApi.Migrations
{
    [DbContext(typeof(TallerWebApiDbContext))]
    [Migration("20210528212726_NOnumeroOrden")]
    partial class NOnumeroOrden
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn)
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("TallerWebApi.Models.Cliente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Activo");

                    b.Property<string>("CI");

                    b.Property<string>("Correo");

                    b.Property<string>("Direccion");

                    b.Property<string>("Nombre");

                    b.Property<int>("Sexo");

                    b.Property<string>("Telefono");

                    b.HasKey("Id");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("TallerWebApi.Models.DocumentoEquipo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Activo");

                    b.Property<int?>("EquipoId");

                    b.Property<string>("FilePath");

                    b.Property<string>("Nombre");

                    b.HasKey("Id");

                    b.HasIndex("EquipoId");

                    b.ToTable("DocumentosEquipos");
                });

            modelBuilder.Entity("TallerWebApi.Models.Equipo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Activo");

                    b.Property<int>("ClienteId");

                    b.Property<int>("EstadoEquipo");

                    b.Property<DateTime>("FechaFabricacion");

                    b.Property<int>("MarcaId");

                    b.Property<int>("ModeloId");

                    b.Property<int>("NumeroSerie");

                    b.Property<string>("Observaciones");

                    b.Property<int>("TipoEquipoId");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.HasIndex("MarcaId");

                    b.HasIndex("ModeloId");

                    b.HasIndex("TipoEquipoId");

                    b.ToTable("Equipos");
                });

            modelBuilder.Entity("TallerWebApi.Models.HistoricoEquipo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Accion");

                    b.Property<bool>("Activo");

                    b.Property<string>("Descripcion");

                    b.Property<int>("EquipoId");

                    b.Property<DateTime>("Fecha");

                    b.Property<string>("Usuario");

                    b.HasKey("Id");

                    b.HasIndex("EquipoId");

                    b.ToTable("HistoricoEquipos");
                });

            modelBuilder.Entity("TallerWebApi.Models.Marca", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Activo");

                    b.Property<string>("Nombre");

                    b.HasKey("Id");

                    b.ToTable("Marcas");
                });

            modelBuilder.Entity("TallerWebApi.Models.Modelo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Activo");

                    b.Property<int>("MarcaId");

                    b.Property<string>("Nombre");

                    b.HasKey("Id");

                    b.HasIndex("MarcaId");

                    b.ToTable("Modelos");
                });

            modelBuilder.Entity("TallerWebApi.Models.OrdenReparacion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Accion");

                    b.Property<bool>("Activo");

                    b.Property<string>("Causa");

                    b.Property<int>("ClienteId");

                    b.Property<string>("Defecto");

                    b.Property<string>("DefectoCliente");

                    b.Property<int>("EquipoId");

                    b.Property<int>("EstadoOrden");

                    b.Property<DateTime>("FechaCerrado");

                    b.Property<DateTime>("FechaFinalizado");

                    b.Property<DateTime>("FechaIngreso");

                    b.Property<DateTime>("FechaPrometido");

                    b.Property<DateTime>("Garantía");

                    b.Property<string>("InformeTecnico");

                    b.Property<int>("LugarReparacion");

                    b.Property<int?>("PresupuestoId");

                    b.Property<int>("TallerId");

                    b.Property<int>("TecnicoId");

                    b.Property<int>("TecnicoRxEquipoId");

                    b.Property<double>("TiempoEmpleado");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.HasIndex("EquipoId");

                    b.HasIndex("PresupuestoId");

                    b.HasIndex("TallerId");

                    b.HasIndex("TecnicoId");

                    b.HasIndex("TecnicoRxEquipoId");

                    b.ToTable("OrdenesReparacion");
                });

            modelBuilder.Entity("TallerWebApi.Models.OrdenReparacion_Repuesto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Activo");

                    b.Property<int>("Cantidad");

                    b.Property<int>("OrdenReparacionId");

                    b.Property<int>("RepuestoId");

                    b.HasKey("Id");

                    b.HasIndex("OrdenReparacionId");

                    b.HasIndex("RepuestoId");

                    b.ToTable("OrdenesReparaciones_Repuesto");
                });

            modelBuilder.Entity("TallerWebApi.Models.Presupuesto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Activo");

                    b.Property<string>("DetalleManoObra");

                    b.Property<string>("DetalledeRepuesto");

                    b.Property<int>("EstadoPresupuesto");

                    b.Property<DateTime>("Fecha");

                    b.Property<DateTime>("FechaGarantia");

                    b.Property<bool>("Garantia");

                    b.Property<double>("Impuesto");

                    b.Property<string>("InformeCliente");

                    b.Property<double>("ManoObra");

                    b.Property<bool>("NotificadoCliente");

                    b.HasKey("Id");

                    b.ToTable("Presupuestos");
                });

            modelBuilder.Entity("TallerWebApi.Models.Proveedor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Activo");

                    b.Property<string>("Direccion");

                    b.Property<string>("Nombre");

                    b.HasKey("Id");

                    b.ToTable("Proveedores");
                });

            modelBuilder.Entity("TallerWebApi.Models.RMA", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Activo");

                    b.Property<int>("EquipoId");

                    b.Property<DateTime>("FechaEnvio");

                    b.Property<int>("OrdenReparacionId");

                    b.Property<int>("ProveedorId");

                    b.HasKey("Id");

                    b.HasIndex("EquipoId");

                    b.HasIndex("OrdenReparacionId");

                    b.HasIndex("ProveedorId");

                    b.ToTable("RMAs");
                });

            modelBuilder.Entity("TallerWebApi.Models.Repuesto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Aceptado");

                    b.Property<bool>("Activo");

                    b.Property<double>("Cantidad");

                    b.Property<string>("Descripcion");

                    b.Property<string>("Nombre");

                    b.Property<double>("Precio");

                    b.Property<double>("PrecioUnitario");

                    b.HasKey("Id");

                    b.ToTable("Repuestos");
                });

            modelBuilder.Entity("TallerWebApi.Models.Taller", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Activo");

                    b.Property<string>("Direccion");

                    b.Property<string>("Nombre");

                    b.HasKey("Id");

                    b.ToTable("Talleres");
                });

            modelBuilder.Entity("TallerWebApi.Models.Tecnico", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Activo");

                    b.Property<string>("Cargo");

                    b.Property<string>("Nombre");

                    b.Property<int>("TallerId");

                    b.HasKey("Id");

                    b.HasIndex("TallerId");

                    b.ToTable("Tecnicos");
                });

            modelBuilder.Entity("TallerWebApi.Models.TipoEquipo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Activo");

                    b.Property<string>("Codigo");

                    b.Property<string>("Nombre");

                    b.HasKey("Id");

                    b.ToTable("TiposEquipos");
                });

            modelBuilder.Entity("TallerWebApi.Models.DocumentoEquipo", b =>
                {
                    b.HasOne("TallerWebApi.Models.Equipo")
                        .WithMany("Documentos")
                        .HasForeignKey("EquipoId");
                });

            modelBuilder.Entity("TallerWebApi.Models.Equipo", b =>
                {
                    b.HasOne("TallerWebApi.Models.Cliente", "Cliente")
                        .WithMany()
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("TallerWebApi.Models.Marca", "Marca")
                        .WithMany()
                        .HasForeignKey("MarcaId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("TallerWebApi.Models.Modelo", "Modelo")
                        .WithMany()
                        .HasForeignKey("ModeloId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("TallerWebApi.Models.TipoEquipo", "TipoEquipo")
                        .WithMany()
                        .HasForeignKey("TipoEquipoId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("TallerWebApi.Models.HistoricoEquipo", b =>
                {
                    b.HasOne("TallerWebApi.Models.Equipo", "Equipo")
                        .WithMany("HistoricoEquipo")
                        .HasForeignKey("EquipoId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("TallerWebApi.Models.Modelo", b =>
                {
                    b.HasOne("TallerWebApi.Models.Marca", "Marca")
                        .WithMany()
                        .HasForeignKey("MarcaId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("TallerWebApi.Models.OrdenReparacion", b =>
                {
                    b.HasOne("TallerWebApi.Models.Cliente", "Cliente")
                        .WithMany()
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("TallerWebApi.Models.Equipo", "Equipo")
                        .WithMany()
                        .HasForeignKey("EquipoId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("TallerWebApi.Models.Presupuesto", "Presupuesto")
                        .WithMany()
                        .HasForeignKey("PresupuestoId");

                    b.HasOne("TallerWebApi.Models.Taller", "Taller")
                        .WithMany()
                        .HasForeignKey("TallerId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("TallerWebApi.Models.Tecnico", "Tecnico")
                        .WithMany()
                        .HasForeignKey("TecnicoId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("TallerWebApi.Models.Tecnico", "TecnicoRxEquipo")
                        .WithMany()
                        .HasForeignKey("TecnicoRxEquipoId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("TallerWebApi.Models.OrdenReparacion_Repuesto", b =>
                {
                    b.HasOne("TallerWebApi.Models.OrdenReparacion", "OrdenReparacion")
                        .WithMany()
                        .HasForeignKey("OrdenReparacionId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("TallerWebApi.Models.Repuesto", "Repuesto")
                        .WithMany()
                        .HasForeignKey("RepuestoId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("TallerWebApi.Models.RMA", b =>
                {
                    b.HasOne("TallerWebApi.Models.Equipo", "Equipo")
                        .WithMany()
                        .HasForeignKey("EquipoId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("TallerWebApi.Models.OrdenReparacion", "OrdenReparacion")
                        .WithMany()
                        .HasForeignKey("OrdenReparacionId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("TallerWebApi.Models.Proveedor", "Proveedor")
                        .WithMany()
                        .HasForeignKey("ProveedorId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("TallerWebApi.Models.Tecnico", b =>
                {
                    b.HasOne("TallerWebApi.Models.Taller", "Taller")
                        .WithMany()
                        .HasForeignKey("TallerId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
