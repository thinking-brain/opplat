// <auto-generated />
using System;
using InventarioWebApi.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace InventarioWebApi.Migrations
{
    [DbContext(typeof(InventarioDbContext))]
    [Migration("20191118053151_FechaEnMovimiento")]
    partial class FechaEnMovimiento
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn)
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("InventarioWebApi.Models.Almacen", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Codigo")
                        .IsRequired();

                    b.Property<string>("Localizacion");

                    b.Property<string>("Nombre")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("Almacenes");
                });

            modelBuilder.Entity("InventarioWebApi.Models.Categoria", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Descripcion");

                    b.Property<string>("Nombre")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("Categoria");
                });

            modelBuilder.Entity("InventarioWebApi.Models.MovimientoDeProducto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("AlmacenId");

                    b.Property<decimal>("Cantidad");

                    b.Property<DateTime>("Fecha");

                    b.Property<int>("ProductoId");

                    b.Property<int>("TipoMovimientoId");

                    b.Property<int>("UnidadDeMedidaId");

                    b.HasKey("Id");

                    b.HasIndex("AlmacenId");

                    b.HasIndex("ProductoId");

                    b.HasIndex("TipoMovimientoId");

                    b.HasIndex("UnidadDeMedidaId");

                    b.ToTable("MovimientosDeProductos");
                });

            modelBuilder.Entity("InventarioWebApi.Models.Producto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("CategoriaId");

                    b.Property<string>("Codigo")
                        .IsRequired();

                    b.Property<string>("Descripcion");

                    b.Property<string>("Discriminator")
                        .IsRequired();

                    b.Property<string>("Nombre")
                        .IsRequired();

                    b.Property<int>("TipoId");

                    b.Property<int>("UnidadId");

                    b.HasKey("Id");

                    b.HasIndex("CategoriaId");

                    b.HasIndex("TipoId");

                    b.HasIndex("UnidadId");

                    b.ToTable("Productos");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Producto");
                });

            modelBuilder.Entity("InventarioWebApi.Models.Submayor", b =>
                {
                    b.Property<int>("AlmacenId");

                    b.Property<int>("ProductoId");

                    b.Property<decimal>("Cantidad")
                        .IsConcurrencyToken();

                    b.HasKey("AlmacenId", "ProductoId");

                    b.HasIndex("ProductoId");

                    b.ToTable("Submayores");
                });

            modelBuilder.Entity("InventarioWebApi.Models.TipoDeProducto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Descripcion");

                    b.Property<string>("Nombre")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("TipoDeProducto");
                });

            modelBuilder.Entity("InventarioWebApi.Models.TipoMovimiento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Descripcion")
                        .IsRequired();

                    b.Property<int>("Factor");

                    b.HasKey("Id");

                    b.ToTable("TiposDeMovimiento");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Descripcion = "Entrada",
                            Factor = 1
                        },
                        new
                        {
                            Id = 2,
                            Descripcion = "Entrada traslado interno",
                            Factor = 1
                        },
                        new
                        {
                            Id = 3,
                            Descripcion = "Merma",
                            Factor = -1
                        },
                        new
                        {
                            Id = 4,
                            Descripcion = "Salida a producción",
                            Factor = -1
                        },
                        new
                        {
                            Id = 5,
                            Descripcion = "Salida traslado interno",
                            Factor = -1
                        },
                        new
                        {
                            Id = 6,
                            Descripcion = "Venta independiente",
                            Factor = -1
                        },
                        new
                        {
                            Id = 7,
                            Descripcion = "Entrada por error en salida",
                            Factor = 1
                        },
                        new
                        {
                            Id = 8,
                            Descripcion = "Salida por error en entrada",
                            Factor = -1
                        },
                        new
                        {
                            Id = 9,
                            Descripcion = "Entrada por ajuste",
                            Factor = 1
                        },
                        new
                        {
                            Id = 10,
                            Descripcion = "Salida",
                            Factor = -1
                        },
                        new
                        {
                            Id = 11,
                            Descripcion = "Entrada por conversión de producto",
                            Factor = 1
                        },
                        new
                        {
                            Id = 12,
                            Descripcion = "Salida por conversion de producto",
                            Factor = -1
                        });
                });

            modelBuilder.Entity("InventarioWebApi.Models.TipoUnidadDeMedida", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Nombre")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("TiposUnidadDeMedida");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nombre = "Masa"
                        });
                });

            modelBuilder.Entity("InventarioWebApi.Models.UnidadDeMedida", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Descripcion");

                    b.Property<decimal>("FactorConversion");

                    b.Property<string>("Nombre")
                        .IsRequired();

                    b.Property<int>("TipoId");

                    b.HasKey("Id");

                    b.ToTable("UnidadesDeMedida");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Descripcion = "g",
                            FactorConversion = 1m,
                            Nombre = "Gramo",
                            TipoId = 1
                        },
                        new
                        {
                            Id = 2,
                            Descripcion = "kg",
                            FactorConversion = 1000m,
                            Nombre = "Kilogramo",
                            TipoId = 1
                        },
                        new
                        {
                            Id = 3,
                            Descripcion = "q",
                            FactorConversion = 100000m,
                            Nombre = "Quintal",
                            TipoId = 1
                        },
                        new
                        {
                            Id = 4,
                            Descripcion = "t",
                            FactorConversion = 1000000m,
                            Nombre = "Tonelada",
                            TipoId = 1
                        },
                        new
                        {
                            Id = 5,
                            Descripcion = "lb",
                            FactorConversion = 453.59m,
                            Nombre = "Libra",
                            TipoId = 1
                        });
                });

            modelBuilder.Entity("InventarioWebApi.Models.Derivado", b =>
                {
                    b.HasBaseType("InventarioWebApi.Models.Producto");

                    b.Property<int>("ProductoOrigenId");

                    b.HasIndex("ProductoOrigenId");

                    b.HasDiscriminator().HasValue("Derivado");
                });

            modelBuilder.Entity("InventarioWebApi.Models.MovimientoDeProducto", b =>
                {
                    b.HasOne("InventarioWebApi.Models.Almacen", "Almacen")
                        .WithMany()
                        .HasForeignKey("AlmacenId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("InventarioWebApi.Models.Producto", "Producto")
                        .WithMany()
                        .HasForeignKey("ProductoId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("InventarioWebApi.Models.TipoMovimiento", "TipoMovimiento")
                        .WithMany()
                        .HasForeignKey("TipoMovimientoId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("InventarioWebApi.Models.UnidadDeMedida", "UnidadDeMedida")
                        .WithMany()
                        .HasForeignKey("UnidadDeMedidaId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("InventarioWebApi.Models.Producto", b =>
                {
                    b.HasOne("InventarioWebApi.Models.Categoria", "Categoria")
                        .WithMany()
                        .HasForeignKey("CategoriaId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("InventarioWebApi.Models.TipoDeProducto", "Tipo")
                        .WithMany()
                        .HasForeignKey("TipoId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("InventarioWebApi.Models.UnidadDeMedida", "Unidad")
                        .WithMany()
                        .HasForeignKey("UnidadId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("InventarioWebApi.Models.Submayor", b =>
                {
                    b.HasOne("InventarioWebApi.Models.Almacen", "Almacen")
                        .WithMany()
                        .HasForeignKey("AlmacenId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("InventarioWebApi.Models.Producto", "Producto")
                        .WithMany()
                        .HasForeignKey("ProductoId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("InventarioWebApi.Models.Derivado", b =>
                {
                    b.HasOne("InventarioWebApi.Models.Producto", "ProductoOrigen")
                        .WithMany("Derivados")
                        .HasForeignKey("ProductoOrigenId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
